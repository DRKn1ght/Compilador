
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startBOOL COMMA DIVIDE DOUBLE_EQUALS ELSE EQUALS FALSE FLOAT GREATER_THAN GREATER_THAN_OR_EQUALS ID IF INT LBRACE LESS_THAN LESS_THAN_OR_EQUALS LPAREN MINUS NEWLINE NOT_EQUALS NUM PLUS RBRACE RETURN RPAREN STR STRING TIMES TRUE WHILEexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMfactor : IDfactor : LPAREN expression RPARENexpression : STRINGexpression : TRUE\n                  | FALSEcomparison : DOUBLE_EQUALS\n                  | NOT_EQUALS\n                  | LESS_THAN\n                  | LESS_THAN_OR_EQUALS\n                  | GREATER_THAN\n                  | GREATER_THAN_OR_EQUALS\n        condition : expression comparison expression\n                  | expression\n    expression : IF LPAREN condition RPAREN LBRACE expression RBRACE while_statement : WHILE LPAREN condition RPAREN LBRACE expression RBRACEstart : expression\n             | declaration\n             | function_declaration\n             | return_statement\n             | condition\n             | while_statementtype : INT\n            | FLOAT\n            | STR\n            | BOOLdeclaration : type ID expression_optexpression_opt : EQUALS expression\n                      | emptyempty :function_declaration : type ID LPAREN parameter_list RPAREN LBRACE declaration_list NEWLINE return_statement NEWLINE RBRACE \n    parameter_list : parameter_list COMMA parameter\n                   | parameter\n                   | empty\n    \n    parameter : type ID\n    return_statement : RETURN expressiondeclaration_list : declaration_list NEWLINE declaration\n                        | declaration\n                        | empty'
    
_lr_action_items = {'STRING':([0,13,16,26,27,28,29,30,31,32,35,39,50,60,64,],[9,9,9,9,-13,-14,-15,-16,-17,-18,9,9,9,9,9,]),'TRUE':([0,13,16,26,27,28,29,30,31,32,35,39,50,60,64,],[10,10,10,10,-13,-14,-15,-16,-17,-18,10,10,10,10,10,]),'FALSE':([0,13,16,26,27,28,29,30,31,32,35,39,50,60,64,],[11,11,11,11,-13,-14,-15,-16,-17,-18,11,11,11,11,11,]),'IF':([0,13,16,26,27,28,29,30,31,32,35,39,50,60,64,],[12,12,12,12,-13,-14,-15,-16,-17,-18,12,12,12,12,12,]),'RETURN':([0,76,],[16,16,]),'WHILE':([0,],[17,]),'INT':([0,49,63,66,76,],[19,19,19,19,19,]),'FLOAT':([0,49,63,66,76,],[20,20,20,20,20,]),'STR':([0,49,63,66,76,],[21,21,21,21,21,]),'BOOL':([0,49,63,66,76,],[22,22,22,22,22,]),'NUM':([0,13,16,24,25,26,27,28,29,30,31,32,33,34,35,39,50,60,64,],[23,23,23,23,23,23,-13,-14,-15,-16,-17,-18,23,23,23,23,23,23,23,]),'ID':([0,13,14,16,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,50,54,60,64,70,],[15,15,37,15,-29,-30,-31,-32,15,15,15,-13,-14,-15,-16,-17,-18,15,15,15,15,15,61,15,15,75,]),'LPAREN':([0,12,13,16,17,24,25,26,27,28,29,30,31,32,33,34,35,37,39,50,60,64,],[13,35,13,13,39,13,13,13,-13,-14,-15,-16,-17,-18,13,13,13,49,13,13,13,13,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,15,18,23,37,38,40,41,42,43,44,47,48,51,58,69,74,80,],[0,-20,-24,-25,-26,-27,-28,-3,-10,-11,-12,-8,-6,-7,-36,-42,-1,-2,-19,-4,-5,-9,-33,-35,-34,-21,-22,-37,]),'PLUS':([2,8,9,10,11,15,18,23,36,38,40,41,42,43,44,46,47,58,65,68,69,],[24,-3,-10,-11,-12,-8,-6,-7,24,24,-1,-2,24,-4,-5,24,-9,24,24,24,-21,]),'MINUS':([2,8,9,10,11,15,18,23,36,38,40,41,42,43,44,46,47,58,65,68,69,],[25,-3,-10,-11,-12,-8,-6,-7,25,25,-1,-2,25,-4,-5,25,-9,25,25,25,-21,]),'DOUBLE_EQUALS':([2,8,9,10,11,15,18,23,40,41,43,44,46,47,69,],[27,-3,-10,-11,-12,-8,-6,-7,-1,-2,-4,-5,27,-9,-21,]),'NOT_EQUALS':([2,8,9,10,11,15,18,23,40,41,43,44,46,47,69,],[28,-3,-10,-11,-12,-8,-6,-7,-1,-2,-4,-5,28,-9,-21,]),'LESS_THAN':([2,8,9,10,11,15,18,23,40,41,43,44,46,47,69,],[29,-3,-10,-11,-12,-8,-6,-7,-1,-2,-4,-5,29,-9,-21,]),'LESS_THAN_OR_EQUALS':([2,8,9,10,11,15,18,23,40,41,43,44,46,47,69,],[30,-3,-10,-11,-12,-8,-6,-7,-1,-2,-4,-5,30,-9,-21,]),'GREATER_THAN':([2,8,9,10,11,15,18,23,40,41,43,44,46,47,69,],[31,-3,-10,-11,-12,-8,-6,-7,-1,-2,-4,-5,31,-9,-21,]),'GREATER_THAN_OR_EQUALS':([2,8,9,10,11,15,18,23,40,41,43,44,46,47,69,],[32,-3,-10,-11,-12,-8,-6,-7,-1,-2,-4,-5,32,-9,-21,]),'RPAREN':([8,9,10,11,15,18,23,36,40,41,42,43,44,45,46,47,49,52,55,56,57,61,67,69,],[-3,-10,-11,-12,-8,-6,-7,47,-1,-2,-19,-4,-5,53,-20,-9,-36,59,62,-39,-40,-41,-38,-21,]),'NEWLINE':([8,9,10,11,15,18,23,38,40,41,43,44,47,48,51,58,66,69,71,72,73,75,77,78,],[-3,-10,-11,-12,-8,-6,-7,-42,-1,-2,-4,-5,-9,-33,-35,-34,-36,-21,76,-44,-45,-36,79,-43,]),'RBRACE':([8,9,10,11,15,18,23,40,41,43,44,47,65,68,69,79,],[-3,-10,-11,-12,-8,-6,-7,-1,-2,-4,-5,-9,69,74,-21,80,]),'TIMES':([8,15,18,23,40,41,43,44,47,],[33,-8,-6,-7,33,33,-4,-5,-9,]),'DIVIDE':([8,15,18,23,40,41,43,44,47,],[34,-8,-6,-7,34,34,-4,-5,-9,]),'EQUALS':([37,75,],[50,50,]),'COMMA':([49,55,56,57,61,67,],[-36,63,-39,-40,-41,-38,]),'LBRACE':([53,59,62,],[60,64,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'expression':([0,13,16,26,35,39,50,60,64,],[2,36,38,42,46,46,58,65,68,]),'declaration':([0,66,76,],[3,72,78,]),'function_declaration':([0,],[4,]),'return_statement':([0,76,],[5,77,]),'condition':([0,35,39,],[6,45,52,]),'while_statement':([0,],[7,]),'term':([0,13,16,24,25,26,35,39,50,60,64,],[8,8,8,40,41,8,8,8,8,8,8,]),'type':([0,49,63,66,76,],[14,54,54,70,70,]),'factor':([0,13,16,24,25,26,33,34,35,39,50,60,64,],[18,18,18,18,18,18,43,44,18,18,18,18,18,]),'comparison':([2,46,],[26,26,]),'expression_opt':([37,75,],[48,48,]),'empty':([37,49,66,75,],[51,57,73,51,]),'parameter_list':([49,],[55,]),'parameter':([49,63,],[56,67,]),'declaration_list':([66,],[71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintatico.py',90),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintatico.py',94),
  ('expression -> term','expression',1,'p_expression_term','sintatico.py',98),
  ('term -> term TIMES factor','term',3,'p_term_times','sintatico.py',102),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintatico.py',106),
  ('term -> factor','term',1,'p_term_factor','sintatico.py',110),
  ('factor -> NUM','factor',1,'p_factor_num','sintatico.py',114),
  ('factor -> ID','factor',1,'p_factor_id','sintatico.py',118),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintatico.py',122),
  ('expression -> STRING','expression',1,'p_expression_string','sintatico.py',127),
  ('expression -> TRUE','expression',1,'p_expression_boolean','sintatico.py',132),
  ('expression -> FALSE','expression',1,'p_expression_boolean','sintatico.py',133),
  ('comparison -> DOUBLE_EQUALS','comparison',1,'p_comparison','sintatico.py',139),
  ('comparison -> NOT_EQUALS','comparison',1,'p_comparison','sintatico.py',140),
  ('comparison -> LESS_THAN','comparison',1,'p_comparison','sintatico.py',141),
  ('comparison -> LESS_THAN_OR_EQUALS','comparison',1,'p_comparison','sintatico.py',142),
  ('comparison -> GREATER_THAN','comparison',1,'p_comparison','sintatico.py',143),
  ('comparison -> GREATER_THAN_OR_EQUALS','comparison',1,'p_comparison','sintatico.py',144),
  ('condition -> expression comparison expression','condition',3,'p_condition','sintatico.py',150),
  ('condition -> expression','condition',1,'p_condition','sintatico.py',151),
  ('expression -> IF LPAREN condition RPAREN LBRACE expression RBRACE','expression',7,'p_expression_if','sintatico.py',160),
  ('while_statement -> WHILE LPAREN condition RPAREN LBRACE expression RBRACE','while_statement',7,'p_while_statement','sintatico.py',175),
  ('start -> expression','start',1,'p_start','sintatico.py',183),
  ('start -> declaration','start',1,'p_start','sintatico.py',184),
  ('start -> function_declaration','start',1,'p_start','sintatico.py',185),
  ('start -> return_statement','start',1,'p_start','sintatico.py',186),
  ('start -> condition','start',1,'p_start','sintatico.py',187),
  ('start -> while_statement','start',1,'p_start','sintatico.py',188),
  ('type -> INT','type',1,'p_type_specifier','sintatico.py',193),
  ('type -> FLOAT','type',1,'p_type_specifier','sintatico.py',194),
  ('type -> STR','type',1,'p_type_specifier','sintatico.py',195),
  ('type -> BOOL','type',1,'p_type_specifier','sintatico.py',196),
  ('declaration -> type ID expression_opt','declaration',3,'p_declaration','sintatico.py',201),
  ('expression_opt -> EQUALS expression','expression_opt',2,'p_expression_opt','sintatico.py',211),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','sintatico.py',212),
  ('empty -> <empty>','empty',0,'p_empty','sintatico.py',219),
  ('function_declaration -> type ID LPAREN parameter_list RPAREN LBRACE declaration_list NEWLINE return_statement NEWLINE RBRACE','function_declaration',11,'p_function_declaration','sintatico.py',223),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','sintatico.py',229),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','sintatico.py',230),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','sintatico.py',231),
  ('parameter -> type ID','parameter',2,'p_parameter','sintatico.py',241),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','sintatico.py',246),
  ('declaration_list -> declaration_list NEWLINE declaration','declaration_list',3,'p_declaration_list','sintatico.py',250),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','sintatico.py',251),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','sintatico.py',252),
]
